// Generated by HLC 5.0.0 (HL v4)
#ifndef INC_hxsl__Linker
#define INC_hxsl__Linker
typedef struct _hxsl__$Linker *hxsl__$Linker;
typedef struct _hxsl__Linker *hxsl__Linker;
#include <haxe/ds/IntMap.h>
#include <hl/types/ArrayObj.h>
#include <hxsl/Linker.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <haxe/ds/StringMap.h>
#include <hxsl/_Linker/ShaderInfos.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	haxe__ds__IntMap p0;
	hl__types__ArrayObj p1;
} Enumt$ctx_e171bcc;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	haxe__ds__IntMap p1;
	hl__types__ArrayObj p2;
} Enumt$ctx_f324580;
struct _hxsl__$Linker {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _hxsl__Linker {
	hl_type *$type;
	hl__types__ArrayObj allVars;
	haxe__ds__StringMap varMap;
	hxsl___Linker__ShaderInfos curShader;
	hl__types__ArrayObj shaders;
	haxe__ds__IntMap varIdMap;
	haxe__ds__IntMap locals;
	int curInstance;
	bool batchMode;
	bool isBatchShader;
	int debugDepth;
};
#endif

